variables:
  # Versioned esp-idf-doc env image to use for all document building jobs
  ESP_DOCS_ENV_IMAGE: "$CI_DOCKER_REGISTRY/esp-idf-doc-env-v5.0"

push_master_to_github:
  stage: deploy
  only:
    - master
    - /^release\/v/
#  when: on_success
  dependencies: []
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
    GITHUB_PUSH_REFS: refs/remotes/origin/release refs/remotes/origin/master
  before_script:
    - echo "skip default before_script"
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote add github git@github.com:espressif/esp-dev-kits.git
    # What the next line of script does: goes through the list of refs for all branches we push to github,
    # generates a snippet of shell which is evaluated. The snippet checks CI_BUILD_REF against the SHA
    # (aka objectname) at tip of each branch, and if any SHAs match then it checks out the local branch
    # and then pushes that ref to a corresponding github branch
    #
    # NB: In gitlab 9.x, CI_BUILD_REF was deprecated. New name is CI_COMMIT_REF. If below command suddenly
    # generates bash syntax errors, this is probably why.
    # - eval $(git for-each-ref --shell bash --format 'if [ $CI_BUILD_REF == %(objectname) ]; then git checkout -B %(refname:strip=3); git push --follow-tags github %(refname:strip=3); fi;' $GITHUB_PUSH_REFS)
    - ${DEV_KITS_PATH}/tools/ci/push_to_github.sh

.deploy_docs_template:
  stage: deploy
  image: $ESP_DOCS_ENV_IMAGE
  tags:
    - deploy_docs
  needs:
    - job: "build_docs_html"
      artifacts: true
      optional: false
    - job: "build_docs_pdf"
      artifacts: true
      optional: false
  script:
    - source ${CI_PROJECT_DIR}/.gitlab/ci/utils.sh
    - add_doc_server_ssh_keys $DOCS_DEPLOY_PRIVATEKEY $DOCS_DEPLOY_SERVER $DOCS_DEPLOY_SERVER_USER
    - export GIT_VER=$(git describe --always)
    - pip install -r ${CI_PROJECT_DIR}/docs/requirements.txt
    - deploy-docs

deploy_docs_preview:
  extends:
    - .deploy_docs_template
    - .rules:deploy:docs_preview
  variables:
    TYPE: "preview"
    DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
    DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PREVIEW_DEPLOY_KEY"
    DOCS_DEPLOY_SERVER: "$DOCS_PREVIEW_SERVER"
    DOCS_DEPLOY_SERVER_USER: "$DOCS_PREVIEW_SERVER_USER"
    DOCS_DEPLOY_PATH: "$DOCS_PREVIEW_PATH"
    DOCS_DEPLOY_URL_BASE: "$DOCS_PREVIEW_URL_BASE"
  timeout: 3h

deploy_docs_production:
  extends:
    - .deploy_docs_template
    - .rules:deploy:docs_production
  variables:
    TYPE: "production"
    DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
    DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PROD_DEPLOY_KEY"
    DOCS_DEPLOY_SERVER: "$DOCS_PROD_SERVER"
    DOCS_DEPLOY_SERVER_USER: "$DOCS_PROD_SERVER_USER"
    DOCS_DEPLOY_PATH: "$DOCS_PROD_PATH"
    DOCS_DEPLOY_URL_BASE: "$DOCS_PROD_URL_BASE"
  timeout: 3h

pack-upload_files:
  stage: deploy
  image: espressif/idf:release-v5.1
  tags: ['build']
  needs:
    - job: "build_esp32_c3_lcdkit"
      artifacts: true
      optional: false
    - job: "build_esp32_s3_lcd_ev_board"
      artifacts: true
      optional: false
    - job: "build_esp32_s3_usb_bridge"
      artifacts: true
      optional: false
    - job: "build_esp32_s3_usb_otg"
      artifacts: true
      optional: false
  artifacts:
    when: always
    paths:
      - binaries/
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "fix/generateFiles_py"
  script:
    - pip install rtoml ruamel.yaml --upgrade
    - pip install idf_build_apps
    - idf-build-apps find --p . --recursive -t all -o output.json --manifest-file .build-rules.yml
    - echo "Merging binaries and generating config.toml..."
    - python ${CI_PROJECT_DIR}/tools/generateFiles.py output.json

include:
  - project: 'ae_group/test-related/ae_upload_dl'
    # Use ref to specify the branch name (etc: ref: 'feat/add_esp-dev-kits')
    file: 'trigger.yml'

upload-dl-trigger:
  needs:
    - job: "pack-upload_files"
      artifacts: false
      optional: false
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
  environment:
    name: esp-dev-kits_launchpad
    url: https://espressif.github.io/esp-launchpad/?flashConfigURL=https://dl.espressif.com/AE/esp-dev-kits/config.toml
  variables:
    SOURCE_PROJECT_TOKEN: ${ACCESS_TOKEN}
    # Use TRIGGER_REPO_REF to specify the branch name (etc: TRIGGER_REPO_REF: 'feat/add_esp-dev-kits')
    # Use UPLOAD_TO_DBG_DIR to specify the directory name (etc: UPLOAD_TO_DBG_DIR: '1')
